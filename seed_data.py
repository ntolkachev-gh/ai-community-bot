#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

from datetime import datetime, timedelta
from database.models import User, Event, Registration, SessionLocal, init_db

def create_sample_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    init_db()
    
    db = SessionLocal()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        if db.query(User).count() > 0:
            print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = [
            User(
                telegram_id=123456789,
                username="john_doe",
                first_name="–ò–≤–∞–Ω",
                last_name="–ò–≤–∞–Ω–æ–≤",
                email="ivan@example.com"
            ),
            User(
                telegram_id=987654321,
                username="jane_smith",
                first_name="–ú–∞—Ä–∏—è",
                last_name="–ü–µ—Ç—Ä–æ–≤–∞",
                email="maria@example.com"
            ),
            User(
                telegram_id=555666777,
                username="alex_dev",
                first_name="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
                last_name="–°–∏–¥–æ—Ä–æ–≤"
            )
        ]
        
        for user in users:
            db.add(user)
        db.commit()
        print(f"–°–æ–∑–¥–∞–Ω–æ {len(users)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        events = [
            Event(
                title="–í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
                description="–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º ML –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ.",
                event_datetime=datetime.now() + timedelta(days=7),
                webinar_link="https://zoom.us/j/1234567890",
                max_participants=50
            ),
            Event(
                title="Python –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
                description="–ò–∑—É—á–∏–º pandas, numpy –∏ matplotlib –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –∑–∞–¥–∞—á–∏.",
                event_datetime=datetime.now() + timedelta(days=14),
                webinar_link="https://meet.google.com/abc-defg-hij",
                max_participants=30
            ),
            Event(
                title="–°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–æ–≤",
                description="–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –±–æ—Ç–æ–≤ –¥–ª—è Telegram. –û—Ç –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–æ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏.",
                event_datetime=datetime.now() + timedelta(days=21),
                webinar_link="https://zoom.us/j/9876543210",
                max_participants=40
            ),
            Event(
                title="–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å Flask",
                description="–ò–∑—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Flask. –®–∞–±–ª–æ–Ω—ã, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –¥–µ–ø–ª–æ–π.",
                event_datetime=datetime.now() + timedelta(days=28),
                webinar_link="https://discord.gg/webdev",
                max_participants=25
            ),
            Event(
                title="–ü—Ä–æ—à–µ–¥—à–µ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ",
                description="–≠—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–∂–µ –ø—Ä–æ—à–ª–æ - –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
                event_datetime=datetime.now() - timedelta(days=7),
                webinar_link="https://zoom.us/j/archived",
                max_participants=20
            )
        ]
        
        for event in events:
            db.add(event)
        db.commit()
        print(f"–°–æ–∑–¥–∞–Ω–æ {len(events)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
        
        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π...")
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        registrations = [
            Registration(user_id=1, event_id=1),
            Registration(user_id=2, event_id=1),
            Registration(user_id=3, event_id=1),
            Registration(user_id=1, event_id=2),
            Registration(user_id=2, event_id=3),
            Registration(user_id=3, event_id=4),
            Registration(user_id=1, event_id=5),  # –ü—Ä–æ—à–µ–¥—à–µ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        ]
        
        for registration in registrations:
            db.add(registration)
        db.commit()
        print(f"–°–æ–∑–¥–∞–Ω–æ {len(registrations)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π")
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {db.query(User).count()}")
        print(f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: {db.query(Event).count()}")
        print(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π: {db.query(Registration).count()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    create_sample_data() 